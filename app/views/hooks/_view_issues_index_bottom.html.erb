<%# sobrescreve a função buildFilterRow de public/javascripts/application.js para criar
INPUTs no formato requerido pelo filtro do tipo latlong na view.
Esse javascript é adicionado no bootom , logo sobrescreverá a função JS de mesmo nome.
#%>
<% js = <<-EOJS
/*
* está errado . se outro plugin adicionar outro tipo de
operador/query personalizada, como fazer?
*/
function XXXXXXXXXXXbuildFilterRow(field, operator, values) {
  var fieldId = field.replace('.', '_');
  var filterTable = $("#filters-table");
  var filterOptions = availableFilters[field];
  if (!filterOptions) return;
  var operators = operatorByType[filterOptions['type']];
  var filterValues = filterOptions['values'];
  var i, select;

  var tr = $('<tr class="filter">').attr('id', 'tr_'+fieldId).html(
    '<td class="field"><input checked="checked" id="cb_'+fieldId+'" name="f[]" value="'+field+'" type="checkbox"><label for="cb_'+fieldId+'"> '+filterOptions['name']+'</label></td>' +
    '<td class="operator"><select id="operators_'+fieldId+'" name="op['+field+']"></td>' +
    '<td class="values"></td>'
  );
  filterTable.append(tr);

  select = tr.find('td.operator select');
  for (i = 0; i < operators.length; i++) {
    var option = $('<option>').val(operators[i]).text(operatorLabels[operators[i]]);
    if (operators[i] == operator) { option.attr('selected', true); }
    select.append(option);
  }
  select.change(function(){ toggleOperator(field); });

  switch (filterOptions['type']) {
  case "list":
  case "list_optional":
  case "list_status":
  case "list_subprojects":
    tr.find('td.values').append(
      '<span style="display:none;"><select class="value" id="values_'+fieldId+'_1" name="v['+field+'][]"></select>' +
      ' <span class="toggle-multiselect">&nbsp;</span></span>'
    );
    select = tr.find('td.values select');
    if (values.length > 1) { select.attr('multiple', true); }
    for (i = 0; i < filterValues.length; i++) {
      var filterValue = filterValues[i];
      var option = $('<option>');
      if ($.isArray(filterValue)) {
        option.val(filterValue[1]).text(filterValue[0]);
        if ($.inArray(filterValue[1], values) > -1) {option.attr('selected', true);}
      } else {
        option.val(filterValue).text(filterValue);
        if ($.inArray(filterValue, values) > -1) {option.attr('selected', true);}
      }
      select.append(option);
    }
    break;
  case "date":
  case "date_past":
    tr.find('td.values').append(
      '<span style="display:none;"><input type="text" name="v['+field+'][]" id="values_'+fieldId+'_1" size="10" class="value date_value" /></span>' +
      ' <span style="display:none;"><input type="text" name="v['+field+'][]" id="values_'+fieldId+'_2" size="10" class="value date_value" /></span>' +
      ' <span style="display:none;"><input type="text" name="v['+field+'][]" id="values_'+fieldId+'" size="3" class="value" /> '+labelDayPlural+'</span>'
    );
    $('#values_'+fieldId+'_1').val(values[0]).datepicker(datepickerOptions);
    $('#values_'+fieldId+'_2').val(values[1]).datepicker(datepickerOptions);
    $('#values_'+fieldId).val(values[0]);
    break;
  case "string":
  case "text":
    tr.find('td.values').append(
      '<span style="display:none;"><input type="text" name="v['+field+'][]" id="values_'+fieldId+'" size="30" class="value" /></span>'
    );
    $('#values_'+fieldId).val(values[0]);
    break;
  case "relation":
    tr.find('td.values').append(
      '<span style="display:none;"><input type="text" name="v['+field+'][]" id="values_'+fieldId+'" size="6" class="value" /></span>' +
      '<span style="display:none;"><select class="value" name="v['+field+'][]" id="values_'+fieldId+'_1"></select></span>'
    );
    $('#values_'+fieldId).val(values[0]);
    select = tr.find('td.values select');
    for (i = 0; i < allProjects.length; i++) {
      var filterValue = allProjects[i];
      var option = $('<option>');
      option.val(filterValue[1]).text(filterValue[0]);
      if (values[0] == filterValue[1]) { option.attr('selected', true); }
      select.append(option);
    }
    break;
  case "integer":
  case "float":
  case "tree":
    tr.find('td.values').append(
      '<span style="display:none;"><input type="text" name="v['+field+'][]" id="values_'+fieldId+'_1" size="6" class="value" /></span>' +
      ' <span style="display:none;"><input type="text" name="v['+field+'][]" id="values_'+fieldId+'_2" size="6" class="value" /></span>'
    );
    $('#values_'+fieldId+'_1').val(values[0]);
    $('#values_'+fieldId+'_2').val(values[1]);
    break;
    case "latlong":
	    tr.find('td.values').append(
	      '<span style="display:none;">'+
	      'Lat: <input type="text" name="v['+field+'][]" id="values_'+fieldId+'_1" size="6" class="value" placeholder="Latitude" /> </span>' +
	      'Lon:<input type="text" name="v['+field+'][]" id="values_'+fieldId+'_2" size="6" class="value" placeholder="Longitude" />' +
	      'Raio:<input type="text" name="v['+field+'][]" id="values_'+fieldId+'_3" size="6" class="value" placeholder="Raio (km)" />' + 
	      '</span>'
	    );
	    
	    setTimeout(enableValues(fieldId, [0,1,2]), 200)
	    
	    $('#values_'+fieldId+'_1').val(values[0]);
	    $('#values_'+fieldId+'_2').val(values[1]);
	    $('#values_'+fieldId+'_3').val(values[2]);
    break;
  }
}

function montarLatlong(field){
		operator = '';
		values = [];

		var fieldId = field.replace('.', '_');
		var filterTable = $("#filters-table");
		var filterOptions = availableFilters[field];
		if (!filterOptions) return;
		var operators = operatorByType[filterOptions['type']];
		var filterValues = filterOptions['values'];
		var i, select;

		var tr = $('<tr class="filter">').attr('id', 'tr_'+fieldId).html(
		'<td class="field"><input checked="checked" id="cb_'+fieldId+'" name="f[]" value="'+field+'" type="checkbox"><label for="cb_'+fieldId+'"> '+filterOptions['name']+'</label></td>' +
		'<td class="operator"><select id="operators_'+fieldId+'" name="op['+field+']"></td>' +
		'<td class="values"></td>'
		);
		filterTable.append(tr);

		tr.find('td.values').append(
	      '<span style="display:none;">'+
	      'Lat: <input type="text" name="v['+field+'][]" id="values_'+fieldId+'_1" size="6" class="value" placeholder="Latitude" /> </span>' +
	      'Lon:<input type="text" name="v['+field+'][]" id="values_'+fieldId+'_2" size="6" class="value" placeholder="Longitude" />' +
	      'Raio:<input type="text" name="v['+field+'][]" id="values_'+fieldId+'_3" size="6" class="value" placeholder="Raio (km)" />' + 
	      '</span>'
	    );
	    
	    //setTimeout(enableValues(fieldId, [0,1,2]), 200)
	    
	    $('#values_'+fieldId+'_1').val(values[0]);
	    $('#values_'+fieldId+'_2').val(values[1]);
	    $('#values_'+fieldId+'_3').val(values[2]);

	    enableValues(fieldId, [0,1,2]);
}
/*
$(document).ready(function(){
	$('#add_filter_select').change(function() {
		//addFilter($(this).val(), '', []);
		//buildFilterRow(field, operator, values)
		var v = $(this).val()
		console.log("valor " + v)
		setTimeout(montarLatlong( v ), 500)
	});
});
*/
    EOJS

    %>

<%= javascript_tag js %>